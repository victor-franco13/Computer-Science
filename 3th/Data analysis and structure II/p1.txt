P1: 5 questões
1 de grafo
-lista de adjacencia para montar um grafo direcionado e fazer busca por profundidade e largura (visitados)
4 de árvores
-árvore geradora minima: lista de adjacencias e montar a arvore geradora minima ponderada (pesos)
cada interação escrevendo a lista pai
-listar a lista de adjacencias dessa árvore geradora minima ponderada
-porque Heap não é interessante (mostrar um grafo e a heap explicando o q vc apresentou)
-traçar árvores binarias: altura 3, 4, 5 e 6; deu um conjunto


Grafo: Um grafo ou rede é um modelo matemático que representa relações entre
objetos – nós ou vértices – de um determinado conjunto.

Vértices: é cada item do conjunto em estudo representado no grafo.

Aresta: representa a ligação existente entre dois vértices.

Adjacentes: se existe uma aresta interligando vértices

Aresta dirigida: se a relação entre dois elementos ocorre somente numa direção

Grafo dirigido (dígrafo): se todas as suas arestas forem dirigidas.

Grau: o número de vizinhos que um vértice possui

Caminho: sequência de vértices do grafo, onde cada vértice está conectado ao seguinte por
meio de uma aresta

Ciclo: caminho fechado, em que o vértice inicial e o final são o mesmo.

Grafo conexo: para quaisquer dois vértices é possivel encontrar um caminho

Grafo fortemente conexo: há o caminho de ida e volta para qualquer par de vértice

Pode ser representado com:
Matriz de adjacencias
Lista de adjacencias

Matriz
custo O(n^2)

---------------------- Video aula Backes ----------------------

Grafo: é um modelo matemático que representa relações entre objetos

    É definido como um conjunto de vértices e um conjunto e arestas que conectam qualquer par de vértices.
    G = (V, A)

Vértice: é cada uma das entidades representadas em um grafo.

        Grau de um vértice: é o numero de arestas que chegam ou partem dele
            Em digrafo temos grau de entrada e de saída.

Arestas: Também chamda de "arco"
        Está associada a dois vértices (V1,V2)

        Direção das arestas:
            Direcionado(dígrafo) ou não direcionado

        Laço: Uma aresta é chamada de "laço" se seu vértice de partida é o mesmo que o de chegada, ou seja, a 
        aresta conecta o vértice com ele mesmo (v,v)

Caminho: é uma sequência de vértices de modo que existe sempre uma aresta ligando o vértice anterior com o seguinte
    
    Caminho simples: nenhum dos vértices no caminho se repete

    Comprimento do caminho: é o número de ARESTAS que o caminho usa

    Ciclo: é um caminho que comçea e termina no mesmo vértice.
        Um "laço" é um ciclo de comprimento 1

    Acíclico: Não contém ciclos

    Arestas multiplas: é um grafo que permite mais de uma aresta conectando o mesmo par de vértices
                       Também é conhecido como Multigrafo

Tipos de grafos:

    Grafo trivial: é um grafo com um único vértice e sem arestas

    Grafo simples: é um grafo não direcionado, sem laços e sem arestas paralelas.

    Grafo completo: é um grafo simples onde cada vértice se conecta a todos os outros vértices

    Grafo regular: é um grafo onde todos os vértices possuem o mesmo grau

    Subgrafo: é sub conjunto grafo (uma parte do grafo)

    Grafo bipartido: é um grafo cujos vértices podem ser divididos em dois conjuntos

    Grafo conexo: Existe um caminho partindo de qualquer vértice até qualquer outro vértice do grafo

    Grafo desconexo: Não existe um caminho ligando dois vértices selecionados

    Grafo isomorfos: Dois grafos são ditos isomorfos se existe uma função que faça o mapeamento
    de vértices e arestas de modo que os dois grafos se tornem coincidentes (dois grafos iguais, as vezes com vértices diferentes)

    Grafo ponderado: é o grafo que possui "pesos" associados a cada uma de suas arestas

    Grafo Hamiltoniano: é o grafo que possui um caminho que visita cada VÉRTICE apenas uma vez

    Grafo Euleriano: é o grafo que possui um "ciclo" que visita cada ARESTA apenas uma vez

Representação de grafos:
    Duas abordagens são muito utilizadas:
        Matriz de adjacencias
        Lista de adjacencias

    Matriz de adjacencia:
        Uma matriz N x N é utilizada para armazenar o grafo, onde N é o número de vértices
        Uma aresta é representada por uma "marca" na posição (i,j) da matriz
            
        Grafo e digrafo tem diferença

    Lista de adjacencia
        Cada vértice aponta para todos os vértices que ele tem conexão

"Grafo.h": definir protótipos das funções e ponteiro "Grafo"
"Grafo.c": definir o tipo de "grafo" e implementas as suas funções

Busca em grafos: Consiste em explorar um grafo
    Principais tipos de busca em grafos:
    Produndidade
    Largura
    Pelo menor caminho

    Busca em profundidade: partindo de um vértice inicial, ela explora o máximo possível cada um de seus ramos antes de retroceder ("backtracking")

    Busca em largura: partindo de um vértice inicial, ela explora todos os vértices vizinhos. Em seguida, para cada vértice vizinho, ela repete esse
    processo, visitando os vértices ainda inexplorados

    Busca pelo menor caminho: partindo de um vértice inicial, calcula a menor distancia desse vertice a todos os demais (desde que exista um caminho entre eles)
        Algoritmo de Dijkstra

Busca em profundidade
    Visita os vértices seguintes ao visitado que ainda não forão visitados.

Busca em largura
    Visita todos os vértices adjacentes a um vértice para prosseguir para o proximo vértice
    
